'use strict';

// * https://www.acmicpc.net/problem/11651

// TODO 좌표 정렬하기2 이해하기
/***********************************************************************
  첫 줄은 좌표의 수가 있고, 그 뒤로는 좌표가 주어진다.
  y축을 기준으로 오름차순 정렬을 하며 y가 같을 경우, x기준 오름차순을 한다.
***********************************************************************/

// TODO 수도코드
/***********************************************************************
 // ? 배열로 만들고, sort로 y축이 다를 경우 x축 정렬, 같을 경우 y축 정렬한다. 
 // ! 주의할점 : 첫 줄을 꼭 이용해야한다.
 // 좌표의 수와 같기 때문에 이용 안 했는데 이용 안 하면 틀린다.
 // 마지막에 '\n'이 붙어도 통과되는건 뭐지? 이상한데에서 유도리있다.
 // ! 문제는 어렵지 않다. 문제 이해하기보단 백준 이해하기를 했다.
***********************************************************************/

// const fs = require('fs');
// const input = fs.readFileSync('dev/stdin').toString().split('\n');
const input = `5
0 4
1 2
1 -1
2 2
3 3`.split('\n');

const N = input.shift();

const arr = [];

for (let i = 0; i < N; i++) {
  arr.push(input[i].split(' '));
}

arr.sort((a, b) => {
  if (a[1] !== b[1]) {
    return a[1] - b[1];
  }
  return a[0] - b[0];
});

const result = arr.map((el) => `${el[0]} ${el[1]}`).join('\n');

console.log(result);

/*** correct answer ***/
const input2 = `1 -1
1 2
2 2
3 3
0 4`;

console.log(result === input2);
